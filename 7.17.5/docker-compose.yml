version: "3.0"
networks:
  elk_7:
    driver: bridge
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
    container_name: es_7
    environment:
      - TZ=Asia/Taipei
      - "discovery.type=single-node"
      - network.host=0.0.0.0
      - http.host=0.0.0.0
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: nc -z localhost 9200 || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - .data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elk_7
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.5
    container_name: kibana_7
    environment:
      - TZ=Asia/Taipei
      - ELASTICSEARCH_HOSTS=http://es_7:9200
      - xpack.apm.enabled=true
    ports:
      - "5601:5601"
    volumes:
      - .data/kibana:/usr/share/kibana/data
    healthcheck:
      test: curl -s http://localhost:5601/api/status || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - elk_7
    depends_on:
      elasticsearch:
        condition: service_healthy
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.5
    container_name: apm_7
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - "8200:8200"
    command: apm-server -e -E apm-server.rum.enabled=true -E setup.kibana.host=kibana_7:5601 -E apm-server.kibana.enabled=true -E apm-server.kibana.host=kibana_7:5601 -E output.elasticsearch.hosts=["es_7:9200"] # ["es01:9200"] results the same
    networks:
      - elk_7
    healthcheck:
      test: curl -s http://localhost:8200/ || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
